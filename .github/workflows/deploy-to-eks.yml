name: üöÄ Build, Push & Deploy to EKS

on:
  workflow_dispatch:

env:
  ECR_REPOSITORY: ksp-ecr-app-repository
  IMAGE_TAG: latest
  CLUSTER_NAME: ksp-ga-eks-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: üì¶ Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: üê≥ Build, tag, and push Docker image to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY
          
          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
          docker push $REPOSITORY_URI:$IMAGE_TAG

      - name: ‚öôÔ∏è Update Kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name $CLUSTER_NAME

      - name: üì¶ Deploy to EKS
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY

          sed "s|<IMAGE_URI>|$REPOSITORY_URI:$IMAGE_TAG|g" k8s/deployment.yaml | kubectl apply -f -
          
      - name: ‚úÖ Check Services and Pods
        run: |
          kubectl get svc
          kubectl get pods
